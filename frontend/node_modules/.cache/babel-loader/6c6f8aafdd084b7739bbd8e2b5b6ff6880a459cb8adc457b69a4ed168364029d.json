{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getServerData } from '../helper/helper';\n\n/** redux actions */\nimport * as Action from '../redux/question_reducer';\n\n/** fetch question hook to fetch api data and set value to store */\nexport const useFetchQestion = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [getData, setGetData] = useState({\n    isLoading: false,\n    apiData: [],\n    serverError: null\n  });\n  useEffect(() => {\n    setGetData(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n\n    /** async function fetch backend data */\n    (async () => {\n      try {\n        const [{\n          questions,\n          answers\n        }] = await getServerData(`${process.env.REACT_APP_SERVER_HOSTNAME}/api/questions`, data => data);\n        if (questions.length > 0) {\n          setGetData(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n          setGetData(prev => ({\n            ...prev,\n            apiData: questions\n          }));\n\n          /** dispatch an action */\n          dispatch(Action.startExamAction({\n            question: questions,\n            answers\n          }));\n        } else {\n          throw new Error('No Question Avalibale');\n        }\n      } catch (error) {\n        setGetData(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n        setGetData(prev => ({\n          ...prev,\n          serverError: error\n        }));\n      }\n    })();\n  }, [dispatch]);\n  return [getData, setGetData];\n};\n\n/** MoveAction Dispatch function */\n_s(useFetchQestion, \"r9chc075T9pIaDaZtDmmwhVDtK4=\", false, function () {\n  return [useDispatch];\n});\nexport const MoveNextQuestion = () => async dispatch => {\n  try {\n    dispatch(Action.moveNextAction()); /** increase trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/** PrevAction Dispatch function */\nexport const MovePrevQuestion = () => async dispatch => {\n  try {\n    dispatch(Action.movePrevAction()); /** decrease trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["useEffect","useState","useDispatch","getServerData","Action","useFetchQestion","_s","dispatch","getData","setGetData","isLoading","apiData","serverError","prev","questions","answers","process","env","REACT_APP_SERVER_HOSTNAME","data","length","startExamAction","question","Error","error","MoveNextQuestion","moveNextAction","console","log","MovePrevQuestion","movePrevAction"],"sources":["P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/src/hooks/FetchQuestion.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getServerData } from '../helper/helper';\n\n/** redux actions */\nimport * as Action from '../redux/question_reducer';\n\n/** fetch question hook to fetch api data and set value to store */\nexport const useFetchQestion = () => {\n  const dispatch = useDispatch();\n  const [getData, setGetData] = useState({\n    isLoading: false,\n    apiData: [],\n    serverError: null,\n  });\n\n  useEffect(() => {\n    setGetData((prev) => ({ ...prev, isLoading: true }));\n\n    /** async function fetch backend data */\n    (async () => {\n      try {\n        const [{ questions, answers }] = await getServerData(\n          `${process.env.REACT_APP_SERVER_HOSTNAME}/api/questions`,\n          (data) => data\n        );\n\n        if (questions.length > 0) {\n          setGetData((prev) => ({ ...prev, isLoading: false }));\n          setGetData((prev) => ({ ...prev, apiData: questions }));\n\n          /** dispatch an action */\n          dispatch(Action.startExamAction({ question: questions, answers }));\n        } else {\n          throw new Error('No Question Avalibale');\n        }\n      } catch (error) {\n        setGetData((prev) => ({ ...prev, isLoading: false }));\n        setGetData((prev) => ({ ...prev, serverError: error }));\n      }\n    })();\n  }, [dispatch]);\n\n  return [getData, setGetData];\n};\n\n/** MoveAction Dispatch function */\nexport const MoveNextQuestion = () => async (dispatch) => {\n  try {\n    dispatch(Action.moveNextAction()); /** increase trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/** PrevAction Dispatch function */\nexport const MovePrevQuestion = () => async (dispatch) => {\n  try {\n    dispatch(Action.movePrevAction()); /** decrease trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA,OAAO,KAAKC,MAAM,MAAM,2BAA2B;;AAEnD;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACrCS,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACdS,UAAU,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEH,SAAS,EAAE;IAAK,CAAC,CAAC,CAAC;;IAEpD;IACA,CAAC,YAAY;MACX,IAAI;QACF,MAAM,CAAC;UAAEI,SAAS;UAAEC;QAAQ,CAAC,CAAC,GAAG,MAAMZ,aAAa,CACjD,GAAEa,OAAO,CAACC,GAAG,CAACC,yBAA0B,gBAAe,EACvDC,IAAI,IAAKA,IACZ,CAAC;QAED,IAAIL,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;UACxBX,UAAU,CAAEI,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEH,SAAS,EAAE;UAAM,CAAC,CAAC,CAAC;UACrDD,UAAU,CAAEI,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEF,OAAO,EAAEG;UAAU,CAAC,CAAC,CAAC;;UAEvD;UACAP,QAAQ,CAACH,MAAM,CAACiB,eAAe,CAAC;YAAEC,QAAQ,EAAER,SAAS;YAAEC;UAAQ,CAAC,CAAC,CAAC;QACpE,CAAC,MAAM;UACL,MAAM,IAAIQ,KAAK,CAAC,uBAAuB,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdf,UAAU,CAAEI,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEH,SAAS,EAAE;QAAM,CAAC,CAAC,CAAC;QACrDD,UAAU,CAAEI,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAED,WAAW,EAAEY;QAAM,CAAC,CAAC,CAAC;MACzD;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACjB,QAAQ,CAAC,CAAC;EAEd,OAAO,CAACC,OAAO,EAAEC,UAAU,CAAC;AAC9B,CAAC;;AAED;AAAAH,EAAA,CAtCaD,eAAe;EAAA,QACTH,WAAW;AAAA;AAsC9B,OAAO,MAAMuB,gBAAgB,GAAGA,CAAA,KAAM,MAAOlB,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAACH,MAAM,CAACsB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAGA,CAAA,KAAM,MAAOtB,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAACH,MAAM,CAAC0B,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC,OAAON,KAAK,EAAE;IACdG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}