{"ast":null,"code":"import _regeneratorRuntime from\"P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{useDispatch}from'react-redux';import{getServerData}from'../helper/helper';/** redux actions */import*as Action from'../redux/question_reducer';/** fetch question hook to fetch api data and set value to store */export var useFetchQestion=function useFetchQestion(){var dispatch=useDispatch();var _useState=useState({isLoading:false,apiData:[],serverError:null}),_useState2=_slicedToArray(_useState,2),getData=_useState2[0],setGetData=_useState2[1];useEffect(function(){setGetData(function(prev){return _objectSpread(_objectSpread({},prev),{},{isLoading:true});});/** async function fetch backend data */_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$getServerData,_yield$getServerData2,_yield$getServerData3,questions,answers;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getServerData(\"https://quizzy-backend-xg71.onrender.com/api/questions\",function(data){return data;});case 3:_yield$getServerData=_context.sent;_yield$getServerData2=_slicedToArray(_yield$getServerData,1);_yield$getServerData3=_yield$getServerData2[0];questions=_yield$getServerData3.questions;answers=_yield$getServerData3.answers;if(!(questions.length>0)){_context.next=14;break;}setGetData(function(prev){return _objectSpread(_objectSpread({},prev),{},{isLoading:false});});setGetData(function(prev){return _objectSpread(_objectSpread({},prev),{},{apiData:questions});});/** dispatch an action */dispatch(Action.startExamAction({question:questions,answers:answers}));_context.next=15;break;case 14:throw new Error('No Question Avalibale');case 15:_context.next=21;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);setGetData(function(prev){return _objectSpread(_objectSpread({},prev),{},{isLoading:false});});setGetData(function(prev){return _objectSpread(_objectSpread({},prev),{},{serverError:_context.t0});});case 21:case\"end\":return _context.stop();}},_callee,null,[[0,17]]);}))();},[dispatch]);return[getData,setGetData];};/** MoveAction Dispatch function */export var MoveNextQuestion=function MoveNextQuestion(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:try{dispatch(Action.moveNextAction());/** increase trace by 1 */}catch(error){console.log(error);}case 1:case\"end\":return _context2.stop();}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();};/** PrevAction Dispatch function */export var MovePrevQuestion=function MovePrevQuestion(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:try{dispatch(Action.movePrevAction());/** decrease trace by 1 */}catch(error){console.log(error);}case 1:case\"end\":return _context3.stop();}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"names":["useEffect","useState","useDispatch","getServerData","Action","useFetchQestion","dispatch","_useState","isLoading","apiData","serverError","_useState2","_slicedToArray","getData","setGetData","prev","_objectSpread","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getServerData","_yield$getServerData2","_yield$getServerData3","questions","answers","wrap","_callee$","_context","next","data","sent","length","startExamAction","question","Error","t0","stop","MoveNextQuestion","_ref2","_callee2","_callee2$","_context2","moveNextAction","error","console","log","_x","apply","arguments","MovePrevQuestion","_ref3","_callee3","_callee3$","_context3","movePrevAction","_x2"],"sources":["P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/src/hooks/FetchQuestion.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getServerData } from '../helper/helper';\n\n/** redux actions */\nimport * as Action from '../redux/question_reducer';\n\n/** fetch question hook to fetch api data and set value to store */\nexport const useFetchQestion = () => {\n  const dispatch = useDispatch();\n  const [getData, setGetData] = useState({\n    isLoading: false,\n    apiData: [],\n    serverError: null,\n  });\n\n  useEffect(() => {\n    setGetData((prev) => ({ ...prev, isLoading: true }));\n\n    /** async function fetch backend data */\n    (async () => {\n      try {\n        const [{ questions, answers }] = await getServerData(\n          `https://quizzy-backend-xg71.onrender.com/api/questions`,\n          (data) => data\n        );\n\n        if (questions.length > 0) {\n          setGetData((prev) => ({ ...prev, isLoading: false }));\n          setGetData((prev) => ({ ...prev, apiData: questions }));\n\n          /** dispatch an action */\n          dispatch(Action.startExamAction({ question: questions, answers }));\n        } else {\n          throw new Error('No Question Avalibale');\n        }\n      } catch (error) {\n        setGetData((prev) => ({ ...prev, isLoading: false }));\n        setGetData((prev) => ({ ...prev, serverError: error }));\n      }\n    })();\n  }, [dispatch]);\n\n  return [getData, setGetData];\n};\n\n/** MoveAction Dispatch function */\nexport const MoveNextQuestion = () => async (dispatch) => {\n  try {\n    dispatch(Action.moveNextAction()); /** increase trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/** PrevAction Dispatch function */\nexport const MovePrevQuestion = () => async (dispatch) => {\n  try {\n    dispatch(Action.movePrevAction()); /** decrease trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}