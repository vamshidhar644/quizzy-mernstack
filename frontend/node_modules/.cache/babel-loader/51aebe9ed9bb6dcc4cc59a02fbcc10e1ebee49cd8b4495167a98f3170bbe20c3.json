{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { UseAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [loginerror, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = UseAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/admin/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError('*' + json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    loginerror\n  };\n};\n_s(useLogin, \"8/pgKokswUwegs/ggpggmJOOwLM=\");","map":{"version":3,"names":["useState","UseAuthContext","useLogin","_s","loginerror","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","error","localStorage","setItem","type","payload"],"sources":["P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { UseAuthContext } from './useAuthContext';\r\n\r\nexport const useLogin = () => {\r\n  const [loginerror, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = UseAuthContext();\r\n\r\n  const login = async (email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const response = await fetch('/api/admin/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError('*' + json.error);\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('user', JSON.stringify(json));\r\n\r\n      // update the auth context\r\n      dispatch({ type: 'LOGIN', payload: json });\r\n\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return { login, isLoading, loginerror };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,GAAG,GAAGc,IAAI,CAACE,KAAK,CAAC;IAC5B;IACA,IAAIT,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAAEgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAK,CAAC,CAAC;MAE1CZ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACD,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAW,CAAC;AACzC,CAAC;AAACD,EAAA,CA/BWD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}