{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { UseAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [loginerror, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = UseAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n\n    // const response = await fetch('/api/user/login', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({ email, password }),\n    // });\n    // const json = await response.json();\n\n    // if (!response.ok) {\n    //   setIsLoading(false);\n    //   setError('*' + json.error);\n    // }\n    // if (response.ok) {\n    //   // save the user to local storage\n    //   localStorage.setItem('user', JSON.stringify(json));\n\n    //   // update the auth context\n    //   dispatch({ type: 'LOGIN', payload: json });\n\n    //   setIsLoading(false);\n    // }\n  };\n\n  return {\n    login,\n    isLoading,\n    loginerror\n  };\n};\n_s(useLogin, \"8/pgKokswUwegs/ggpggmJOOwLM=\");","map":{"version":3,"names":["useState","UseAuthContext","useLogin","_s","loginerror","setError","isLoading","setIsLoading","dispatch","login","email","password"],"sources":["P:/MERN Industrial Internship/Project/Quizzy_Fullstack/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { UseAuthContext } from './useAuthContext';\r\n\r\nexport const useLogin = () => {\r\n  const [loginerror, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = UseAuthContext();\r\n\r\n  const login = async (email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    // const response = await fetch('/api/user/login', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({ email, password }),\r\n    // });\r\n    // const json = await response.json();\r\n\r\n    // if (!response.ok) {\r\n    //   setIsLoading(false);\r\n    //   setError('*' + json.error);\r\n    // }\r\n    // if (response.ok) {\r\n    //   // save the user to local storage\r\n    //   localStorage.setItem('user', JSON.stringify(json));\r\n\r\n    //   // update the auth context\r\n    //   dispatch({ type: 'LOGIN', payload: json });\r\n\r\n    //   setIsLoading(false);\r\n    // }\r\n  };\r\n  return { login, isLoading, loginerror };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;EACF,CAAC;;EACD,OAAO;IAAEI,KAAK;IAAEH,SAAS;IAAEF;EAAW,CAAC;AACzC,CAAC;AAACD,EAAA,CA/BWD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}